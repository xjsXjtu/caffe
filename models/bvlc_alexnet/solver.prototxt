net: "models/bvlc_alexnet/train_val.prototxt"

test_iter: 8        # batch size is 32, so 32 * 8 will cover all 250 dog05 val images.
test_interval: 4   # Compute on val images every test_interval training iterations.

base_lr: 0.01       # begin training at a learning rate of base_lr
lr_policy: "step"   # learning rate policy: drop the learning rate in "steps"
                    # by a factor of gamma every stepsize iterations
gamma: 0.1          # drop the learning rate by a factor of 10
                    # (i.e., multiply it by a factor of gamma = 0.1) ???????
stepsize: 1000      # drop the learning rate every stepsize iterations
display: 1          # Display every "display" iterations
max_iter: 4500      # train for max_iter iterations total
momentum: 0.9
weight_decay: 0.0005
snapshot: 10000
snapshot_prefix: "models/bvlc_alexnet/caffe_alexnet_train"
solver_mode: CPU
